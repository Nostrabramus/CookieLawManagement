plugin.tx_aipcookielaw {
    features.requireCHashArgumentForActionArguments = 0
    settings{
        Opt-in_Opt-out = {$plugin.tx_aipcookielaw.settings.Opt-inOpt-out}
        Scroll = {$plugin.tx_aipcookielaw.settings.Scroll}
        Click = {$plugin.tx_aipcookielaw.settings.Click}
        CookieExpire = {$plugin.tx_aipcookielaw.settings.CookieExpire}
        IdPageInformation = {$plugin.tx_aipcookielaw.settings.IdPageInformation}
        CssStyle = {$plugin.tx_aipcookielaw.settings.CssStyle}
        Style = {$plugin.tx_aipcookielaw.settings.Style}
        BannerPosition = {$plugin.tx_aipcookielaw.settings.BannerPosition}
        OnlyShowWithinEU = {$plugin.tx_aipcookielaw.settings.OnlyShowWithinEU}
        TagPosition = {$plugin.tx_aipcookielaw.settings.TagPosition}
        OnOff = {$plugin.tx_aipcookielaw.settings.OnOff}
        OnOffPopUp = {$plugin.tx_aipcookielaw.settings.OnOffPopUp}
        HttpServiceAPILocation = {$plugin.tx_aipcookielaw.settings.HttpServiceAPILocation}

    }
}


# insert language parameter
page.meta.aip_cookielaw_language.cObject = COA
page.meta.aip_cookielaw_language.cObject {
    20 = TEXT
    20.data = GP:L
}

###  If constant OnOff is Off (0) don't turn on the regural expression which deactivate cookie installation ###
[globalVar = LIT:1 = {$plugin.tx_aipcookielaw.settings.OnOff}]
    page.stdWrap.replacement {

        # Replacement for Vimeo IFrames: match 'src="player.vimeo.com'
        10 {
            search = #(<iframe\b[^>]*)(player.vimeo.com)(.*?)(</iframe>)#s
            replace = <script type="text/plain" class="cc-onconsent-analytics"> jQuery('#id_inutile').html('${1}${2}${3}${4}')</script>
            useRegExp = 1
        }

        # Replacement for YouTube IFrames: match 'src="youtube.com'
        20 {
            search = #(<iframe\b[^>]*)(youtube.com|youtu.be)(.*?)(</iframe>)#s
            replace = <script type="text/plain" class="cc-onconsent-social"> jQuery('#id_inutile').html('${1}${2}${3}${4}')</script>
            useRegExp = 1
        }

        # Replacement for Google Maps IFrames: match 'google.com/maps/'
        30 {
            search = #(<iframe\b[^>]*)(google.com/maps/)(.*?)(</iframe>)#s
            replace = <script type="text/plain" class="cc-onconsent-social"> jQuery('#id_inutile').html('${1}${2}${3}${4}')</script>
            useRegExp = 1
        }

        # Replacement for Flikr: match 'flickrit.com/slideshowholder.php'
        40 {
            search = #(<iframe\b[^>]*)(flickrit.com/slideshowholder.php)(.*?)(</iframe>)#s
            replace = <script type="text/plain" class="cc-onconsent-analytics"> jQuery('#id_inutile').html('${1}${2}${3}${4}')</script>
            useRegExp = 1
        }

        # Replacement for SlideShare: match 'slideshare.net/slideshow/'
        50 {
            search = #(<iframe\b[^>]*)(slideshare.net/slideshow/)(.*?)(</iframe>)#s
            replace = <script type="text/plain" class="cc-onconsent-analytics"> jQuery('#id_inutile').html('${1}${2}${3}${4}')</script>
            useRegExp = 1
        }

        # Replacement for Prezi: match 'prezi.com/embed/'
        60 {
            search = #(<iframe\b[^>]*)(prezi.com/embed/)(.*?)(</iframe>)#s
            replace = <script type="text/plain" class="cc-onconsent-social"> jQuery('#id_inutile').html('${1}${2}${3}${4}')</script>
            useRegExp = 1
        }
        # Replacement for Facebook: match 'connect.facebook.net/'
        70{
            search=#(<script>)(.*?)(connect.facebook.net)(.*?)(</script>)#s
            replace=<script type="text/plain" class="cc-onconsent-social">${2}${3}${4}${5}
            useRegExp=1
        }

        # Replacement for Twitter: match 'platform.twitter.com'
        80{
            search=#(<script>)(.*?)(platform.twitter.com)(.*?)(</script>)#s
            replace=<script type="text/plain" class="cc-onconsent-social">${2}${3}${4}${5}
            useRegExp=1
        }

        # Replacement for Twitter: match src="//platform.twitter.com
        90{
            search=#(<script async src="//platform.twitter.com/widgets.js" charset="utf-8">)(</script>)#s
            replace=<script type="text/plain" class="cc-onconsent-social" async src="//platform.twitter.com/widgets.js" charset="utf-8">${2}
            useRegExp=1
        }
    }

    # include js inline
    page.wrap(
 | <script type="text/javascript">
    var componente = {
        cookies: {
            social: {},
            analytics: {}
        },
        settings: {
           style: "{$plugin.tx_aipcookielaw.settings.Style}",
           bannerPosition: "{$plugin.tx_aipcookielaw.settings.BannerPosition}",
           onlyshowwithineu: "{$plugin.tx_aipcookielaw.settings.OnlyShowWithinEU}",
           tagPosition: "{$plugin.tx_aipcookielaw.settings.TagPosition}",
           consenttype: "{$plugin.tx_aipcookielaw.settings.Opt-inOpt-out}",
           hidepopupprivatesettings: "{$plugin.tx_aipcookielaw.settings.OnOffPopUp}",
           hideprivacysettingstab:"{$plugin.tx_aipcookielaw.settings.OnOff}",
           confirmClick: "{$plugin.tx_aipcookielaw.settings.Click}",
           confirmScroll: "{$plugin.tx_aipcookielaw.settings.Scroll}",
           cookieExpire : "{$plugin.tx_aipcookielaw.settings.CookieExpire}",
           httpserviceapilocation: "{$plugin.tx_aipcookielaw.settings.HttpServiceAPILocation}",
           idPageInformation:"{$plugin.tx_aipcookielaw.settings.IdPageInformation}"
        },
        strings: {

        }
     }
     </script>

    )

    // Include Javascript and CSS
    page {
        includeJSFooter {
            cookieLaw = EXT:aip_cookie_law/Resources/Public/Javascript/CookieLaw.js
            cookieInit = EXT:aip_cookie_law/Resources/Public/Javascript/CookieInit.js
        }
        includeCSS {
            cookieLaw < plugin.tx_aipcookielaw.settings.CssStyle
        }

    }
    // Remove the header
[end]

ajaxLanguageJson = PAGE
ajaxLanguageJson {
    typeNum = 1525962364
    config {
        disableAllHeaderCode = 1
        debug = 0
        no_cache = 1
        additionalHeaders {
            10 {
                header = Content-Type: application/json
                replace = 1
            }
        }
        language < config.language
        locale_all < config.locale_all
        htmlTag_langKey < config.htmlTag_langKey
        sys_language_uid < config.sys_language_uid
    }
    10 < tt_content.list.20.aipcookielaw_cookie_law
}



